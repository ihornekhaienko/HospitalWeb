<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Administration" xml:space="preserve">
    <value>Administration</value>
  </data>
  <data name="Admins" xml:space="preserve">
    <value>Admins</value>
  </data>
  <data name="Appointments" xml:space="preserve">
    <value>Appointments</value>
  </data>
  <data name="Doctors" xml:space="preserve">
    <value>Doctors</value>
  </data>
  <data name="EnterDoctor" xml:space="preserve">
    <value>Enter doctor's name or specialty</value>
  </data>
  <data name="FindDoctor" xml:space="preserve">
    <value>Find a doctor</value>
  </data>
  <data name="FindHospital" xml:space="preserve">
    <value>Find a clinic</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="AddressRequired" xml:space="preserve">
    <value>The address is required</value>
  </data>
  <data name="Admin" xml:space="preserve">
    <value>Admin</value>
  </data>
  <data name="BackToFullList" xml:space="preserve">
    <value>Back to Full List</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Date of Birth</value>
  </data>
  <data name="BirthDateRequired" xml:space="preserve">
    <value>The date of birth is required</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="ClearFilters" xml:space="preserve">
    <value>Clear filters</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="ConfirmPasswordRequired" xml:space="preserve">
    <value>The confirmation password is required</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CreateNew" xml:space="preserve">
    <value>Create New</value>
  </data>
  <data name="DayOfWeekRequired" xml:space="preserve">
    <value>The day of week is required</value>
  </data>
  <data name="DaySelect" xml:space="preserve">
    <value>Select day</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>The email is required</value>
  </data>
  <data name="EmailValidation" xml:space="preserve">
    <value>The Email field is not a valid e-mail address</value>
  </data>
  <data name="EndTimeRequired" xml:space="preserve">
    <value>The ending time is required</value>
  </data>
  <data name="EndTimeSelect" xml:space="preserve">
    <value>Select ending time</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Find" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="ForgotPassword" xml:space="preserve">
    <value>Forgot password?</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Hospital" xml:space="preserve">
    <value>Hospital</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="Level" xml:space="preserve">
    <value>Access level</value>
  </data>
  <data name="Locality" xml:space="preserve">
    <value>Locality</value>
  </data>
  <data name="LocalityRequired" xml:space="preserve">
    <value>The locality is required</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Manage" xml:space="preserve">
    <value>Manage</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NameRequired" xml:space="preserve">
    <value>The name is required</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="NewPasswordRequired" xml:space="preserve">
    <value>The new password is required</value>
  </data>
  <data name="Notifications" xml:space="preserve">
    <value>Notifications</value>
  </data>
  <data name="OldPassword" xml:space="preserve">
    <value>Old password</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordMatch" xml:space="preserve">
    <value>Passwords do not match</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>The password is required</value>
  </data>
  <data name="PasswordValidation" xml:space="preserve">
    <value>The {0} must be at least {2} and at max {1} characters long</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="PhoneRequired" xml:space="preserve">
    <value>The phone is required</value>
  </data>
  <data name="Privacy" xml:space="preserve">
    <value>Privacy</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember me?</value>
  </data>
  <data name="Schedule" xml:space="preserve">
    <value>Schedule</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Sex" xml:space="preserve">
    <value>Sex</value>
  </data>
  <data name="Show" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="Specialty" xml:space="preserve">
    <value>Specialty</value>
  </data>
  <data name="SpecialtyRequired" xml:space="preserve">
    <value>The specialty is required</value>
  </data>
  <data name="StartTimeRequired" xml:space="preserve">
    <value>The starting time is required</value>
  </data>
  <data name="StartTimeSelect" xml:space="preserve">
    <value>Select starting time</value>
  </data>
  <data name="StartTimeSelectError" xml:space="preserve">
    <value>The start time must lower than the end time</value>
  </data>
  <data name="Statistics" xml:space="preserve">
    <value>Statistics</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="Super" xml:space="preserve">
    <value>Super</value>
  </data>
  <data name="SuperAdmin" xml:space="preserve">
    <value>Super admin</value>
  </data>
  <data name="SurnameRequired" xml:space="preserve">
    <value>The surname is required</value>
  </data>
  <data name="UnexpectedErrorMessage" xml:space="preserve">
    <value>An unexpected error has occurred</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UploadPhoto" xml:space="preserve">
    <value>Upload photo</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="LookForStatistics" xml:space="preserve">
    <value>Look for statistics</value>
  </data>
  <data name="MakeAppointment" xml:space="preserve">
    <value>Make an appointment without leaving your home</value>
  </data>
  <data name="ManageAdmins" xml:space="preserve">
    <value>Manage admins</value>
  </data>
  <data name="ManageAppointments" xml:space="preserve">
    <value>Manage appointments</value>
  </data>
  <data name="ManageDoctors" xml:space="preserve">
    <value>Manage doctors</value>
  </data>
  <data name="ManagePatients" xml:space="preserve">
    <value>Manage patients</value>
  </data>
  <data name="Patients" xml:space="preserve">
    <value>Patients</value>
  </data>
  <data name="SearchDoctors" xml:space="preserve">
    <value>Search doctors</value>
  </data>
  <data name="SearchDoctorsAd" xml:space="preserve">
    <value>Search for doctors and clinics online</value>
  </data>
  <data name="SearchHospitals" xml:space="preserve">
    <value>Search hospitals</value>
  </data>
  <data name="ShowHistory" xml:space="preserve">
    <value>Show appointments history</value>
  </data>
  <data name="Treatment" xml:space="preserve">
    <value>Treatment history</value>
  </data>
  <data name="FooterText" xml:space="preserve">
    <value>Our mission is to provide quality health services to all in a comfortable and cozy environment. Our clinics primarily offer consultations and is not equipped to take emergencies.</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="AppointmentDetails" xml:space="preserve">
    <value>Appointment details</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="Visits" xml:space="preserve">
    <value>Visits</value>
  </data>
  <data name="Diagnosis" xml:space="preserve">
    <value>Diagnosis</value>
  </data>
  <data name="Patient" xml:space="preserve">
    <value>Patient</value>
  </data>
  <data name="Prescription" xml:space="preserve">
    <value>Prescription</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Print</value>
  </data>
</root>